my_trading_project/
├── README.md                                        # 프로젝트 개요 및 실행 방법
├── requirements.txt                                 # 필요 라이브러리 목록
├── data/                                            # 데이터 디렉토리
│   ├── collect_data.py                              # 데이터 수집 기능 통합
│   ├── data_utils.py                                # 데이터베이스 연결 및 공통 유틸리티
│   ├── db_config.py                                 # DB 설정
│   ├── delete_data.py                               # 데이터 삭제 기능 통합
│   ├── fetch_data.py                                # 데이터 조회 인터페이스
│   ├── store_data.py                                # 데이터 저장 기능 통합
├── market_analysis/                                 # 시장 분석 디렉토리
│   └── analyze_market.py                            # 시장 분석 기법 (상승/하락/횡보 등) 및 추세 판단 로직
├── signal_calc/                                     # 신호 계산 디렉토리
│   └── calc_signal.py                               # 시장 분석 결과에 따른 맞춤 신호 계산 기법 구현
├── trading/                                         # 거래 디렉토리
│   ├── trade_decision.py                            # 신호에 따른 매수/매도 판단 로직
│   ├── position_management.py                       # 포지션 관리(분할 매매, 자산관리 등)
│   └── risk_management.py                           # 시장 상황별 리스크 관리 기법 (손절, 트레일링 스톱 등)
├── parameters_sensitivity/                          # 파라미터 및 민감도 분석 모듈
│   ├── market_analysis.py                           # 시장 분석 모듈용 파라미터 및 민감도 분석
│   ├── signal_calc.py                               # 신호 계산 모듈용 파라미터 및 민감도 분석
│   └── trading.py                                   # 거래 모듈용 파라미터 및 민감도 분석
├── optimization/                                    # 최적화와 과적합 방지, 성과 지표 모듈
│   ├── market_optimize.py                           # 시장 분석 모듈용 최적화, 과적합 방지 로직
│   ├── market_metrics.py                            # 시장 분석 모듈용 성과 지표 계산
│   ├── signal_optimize.py                           # 신호 계산 모듈용 최적화, 과적합 방지 로직
│   ├── signal_metrics.py                            # 신호 계산 모듈용 성과 지표 계산
│   ├── trade_optimize.py                            # 거래 모듈용 최적화, 과적합 방지 로직
│   └── trade_metrics.py                             # 거래 모듈용 성과 지표 계산
├── logs/                                            # 로그 관련 디렉토리
│   ├── log_config.py                                # 로그 중앙 관리 설정 (DEBUG→콘솔, INFO→log_files)
│   └── log_files/                                   # INFO 이상 로그 파일 저장 디렉토리
├── tests/                                           # 테스트 디렉토리
│   ├── integration_tests/                           # 통합 테스트
│   └── unit_tests/                                  # 단위 테스트
│       └── test_storage_fetch.py                    # data 모듈의 저장(store_data) 및 조회(fetch_data) 테스트
└── scripts/                                         # 실행 스크립트 디렉토리
    ├── run_data_store.py                            # 데이터 저장 스크립트
    ├── run_data_update.py                           # 데이터 최신화 스크립트
    ├── run_data_delete.py                           # 데이터 삭제 스크립트
    ├── run_market_analysis.py                       # 시장 분석 핵심 파라미터 추출, 최적화 등 피드백
    ├── run_signal_calc.py                           # 신호 계산 핵심 파라미터 추출, 최적화 등 피드백
    ├── run_trading.py                               # 거래 핵심 파라미터 추출, 최적화 등 피드백
    ├── run_backtest.py                              # 백테스트 통합 실행(파라미터 최적화, 과적합 방지, 성과지표 계산)
    └── run_final_report.py                          # 최종 파라미터로 백테스트 후 결과 보고
