[역할]
기술적 트레이딩 봇 개발자 (소프트웨어 엔지니어, 퀀트 트레이딩 전문가, 통계 및 머신러닝에 해박한 전문가)

[사용자 배경]
- 일반적인 소프트웨어 개발 경험 보유
- Python 및 트레이딩·경제 분야의 전문성은 제한적
- ChatGPT Pro Plan(220$/월)을 구독 중이며, OpenAI Platform 추가 사용은 비용 문제로 어려움
- ChatGPT UI에서 o3-high-mini 모델을 선택해 프로젝트를 개발 중

[요청 사항]
- 프로젝트 루트 경로에 있는 파일들을 하나의 모듈로 보고, 총 10개의 모듈을 전달할 예정입니다.
- 이 10개의 모듈을 모두, 소스 코드 한 줄도 빠짐없이 기억해주십시오.
- 모든 모듈을 전달한 뒤에, 프로젝트에 대한 요구사항을 말씀드리겠습니다.

[프로젝트 리팩토링]
1. 원하는 트레이딩 로직
   - 미리 DB에 수집한 데이터를 조회하고, 이를 바탕으로 시장 분석을 수행합니다.
   - 시장 분석 결과에 따라 적합한 신호 계산 기법을 적용하여 매수/매도 신호를 산출합니다.
   - 산출된 신호를 기반으로 실제 거래(매수/매도)를 실행합니다.
   - 모든 거래가 종료된 후에는 결과를 취합하여 최종 성과를 보고합니다.

2. 필요한 디렉토리(=모듈) 및 파일
   • 데이터
     - 데이터 수집
       → 시장 분석/신호 계산/거래 모듈에 필요한 데이터를 수집합니다.
     - 데이터 저장
       → 수집한 데이터를 PostgreSQL 등 DB에 저장하여 향후 모듈에서 활용할 수 있도록 합니다.
     - 데이터 최신화
       → 기존에 저장된 데이터 중 필요한 부분을 선택하여 최신 상태로 업데이트합니다.
     - 데이터 삭제
       → 더 이상 필요하지 않은 기존 데이터를 선택적으로 삭제합니다.
     - 데이터 조회
       → DB에 저장된 데이터를 호출/조회하여 분석용으로 제공합니다.

   • 시장 분석
     - 시장 분석
       → 상승장, 하락장, 횡보장을 파악하기 위한 다양한 시장 분석 기법(ADX, 이동평균 등)을 구현합니다.

   • 신호 계산
     - 신호 계산
       → 시장 분석 결과에 따라 각각에 맞춘 신호 계산 기법(RSI, MACD, 볼린저 밴드 등)을 사용하여 매수/매도 신호를 산출합니다.

   • 거래
     - 신호에 따른 매수/매도 판단
     - 시장에 따른 맞춤 분할 매매 기법
     - 시장 상황별 리스크 관리 기법
     - 자산관리
     - 포지션관리
       → 분할매매, 손절매(Stop-Loss), 트레일링 스톱(이동식 손절) 등을 통해 시장 변동성에 대응합니다.

   • 로그
     - 로그 중앙 관리
       → DEBUG 이상 로그는 콘솔에 출력합니다.
       → INFO 이상 로그는 log_files 디렉토리에 파일로 저장하여 운영 상황을 기록하고 추적합니다.

   • 파라미터와 민감도 분석
     - 시장 분석 모듈용 파라미터 & 민감도 분석
       → 지표별 기간, 임계값 등에 대한 민감도를 파악합니다.
     - 신호 계산 모듈용 파라미터 & 민감도 분석
       → RSI, 이동평균선 등 핵심 파라미터를 조정하면서 성능 변화를 측정합니다.
     - 거래 모듈용 파라미터 & 민감도 분석
       → 분할매매 비중, 손절 폭 등 거래 전략 파라미터가 결과에 미치는 영향을 분석합니다.

   • 최적화와 과적합 방지, 성과 지표
     - 시장 분석 모듈용 최적화
       → 시장 상태 분류(추세/횡보 등)를 더욱 정확히 하기 위한 파라미터 최적화
       → 과적합 방지
       → 성과 지표 계산 (예: 시장 분석 정확도, 구간별 샤프지수 등)
     - 신호 계산 모듈용 최적화
       → 신호 발생 빈도, 승률, 이익/손실 비율 등을 고려하여 파라미터 최적화
       → 과적합 방지
       → 성과 지표 계산 (예: 승률, Profit Factor, MDD 등)
     - 거래 모듈용 최적화
       → 포지션 사이즈, 레버리지(필요 시), 손절/익절 전략 최적화
       → 과적합 방지
       → 성과 지표 계산 (예: 최대 낙폭, 수익 변동성, Calmar Ratio 등)

   • 실행 스크립트
     - 데이터 저장
     - 데이터 최신화
     - 데이터 삭제
     - 시장 분석 핵심 파라미터 추출
       → 추세 판단을 위한 주요 지표 파라미터 계산, 민감도 테스트
     - 시장 분석 최적화, 과적합 방지, 성과 지표 계산을 통한 피드백
     - 신호 계산 핵심 파라미터 추출
       → 예: RSI 기간, MACD 파라미터 등
     - 신호 계산 최적화, 과적합 방지, 성과 지표 계산을 통한 피드백
     - 거래 핵심 파라미터 추출
       → 분할매매 단계, 손절/익절 범위 등
     - 거래 최적화, 과적합 방지, 성과 지표 계산을 통한 피드백
     - 백테스트를 통해 앞서 최적화한 파라미터를 전체 로직에 맞게 재검증
       → 최적화, 과적합 방지, 성과 지표 계산 피드백
     - 최종 파라미터로 백테스트 진행
       → 안정성 및 수익률이 높은 결과 도출 후 최종 성과 보고

3. **불필요·중복·의문 디렉터리·파일·클래스·함수 식별**  
- 제거/통합/재명명 등의 근거를 들어 명확하게 정리해 주십시오.

4. **네이밍 규칙 정비**  
- 스네이크 케이스(snake_case)로 일관성 있게 통일하고, 언더스코어(_)로 시작하지 않도록 해 주십시오.  
- 현재 역할과 직관적으로 매칭되는 명칭으로 바꿀 때의 예시와 근거를 자세히 들어 주십시오.

5. **전문성 향상 방안**  
- 모듈별로 전문성을 높이기 위해 어떤 알고리즘(ML·시계열 분석·리스크 관리 등)을 추가하거나 개선할지 구체적으로 제안해 주십시오.  
- ‘전문가용’ 주석이나 문서 작성 시, 어떤 식으로 작성하여 이해도를 높일 수 있을지 알려 주십시오.
